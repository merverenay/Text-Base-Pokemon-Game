# 🧱 Dungeon Game

## Description
This is a C-based dungeon exploration game built entirely in the terminal using **ncurses**.  
Players navigate procedurally generated dungeons represented by ASCII characters, encountering monsters, collecting items, and exploring multi-level worlds.  

The game features **dynamic dungeon generation**, **pathfinding algorithms**, **monster AI**, and a **priority queue system** for turn-based movement.  
Players can interact with the world in real time using keyboard inputs, switch between fog and visibility modes, and manage inventory and equipment.

---

## Dungeon Map Legend

| Symbol | Meaning         |
|:-------:|:----------------|
| `.`     | Room floor      |
| `#`     | Corridor        |
| `<`     | Up staircase    |
| `>`     | Down staircase  |
| ` `     | Rock / Wall     |

---

## Features

### 🏗️ Dungeon Generation
- **Random Room Placement:** Non-overlapping rooms within a bounded grid.  
- **MST Corridor Connection:** Connects rooms using a Minimum Spanning Tree algorithm.  
- **Corridor Zigzagging:** Adds randomness for natural layouts.  
- **Staircase Placement:** Guarantees at least one up and one down staircase in different rooms.  
- **Hardness Matrix:** Assigns hardness levels for walls and floors to support tunneling and pathfinding.  
- **Save/Load System:** Allows saving and loading the dungeon state.

---

### 👾 Monster AI & Pathfinding
- Implements **Dijkstra’s Algorithm** for tunneling and non-tunneling monsters.  
- Monsters navigate toward the player using calculated movement costs.  
- Turn order is managed by a **priority queue**, ensuring speed-based fairness.  

#### Monster Attributes
- Default count: 10 (`--nummon` flag)
- Speed range: 5–20
- Hexadecimal IDs (0–9, a–f) represent AI traits.

#### Monster AI Bits
| Bit | Ability | Description |
|:----:|:----------|:-------------|
| 0x1 | Intelligent | Uses Dijkstra’s algorithm for shortest pathfinding |
| 0x2 | Telepathic | Always knows PC’s location |
| 0x4 | Tunneling | Can dig through walls |
| 0x8 | Erratic | Moves randomly 50% of the time |

---

### 🧭 Gameplay and Simulation
- **Event-driven system:** Each entity (PC or monster) generates an event on creation.  
- **Turn order:** Determined by 1000/speed using a min-heap priority queue.  
- **Combat system:** Multi-round battles with hitpoints and damage dice.  
- **HP Regeneration:** PC regenerates 1 HP every 20 turns (max HP = 50).

---

## 🎮 Controls

| Key | Action |
|:----:|:-----------------------------|
| `ykuhlnbj` or numpad `12346789` | Move PC |
| `>` / `<` | Use staircase |
| `m` | Open monster list |
| `f` | Toggle fog of war |
| `g` | Enter teleport mode |
| `r` | Random teleport |
| `i` | View inventory |
| `e` | View equipped items |
| `w` | Wear item |
| `t` | Take off item |
| `d` | Drop item |
| `x` | Expunge item |
| `I` | Inspect item |
| `L` | Look at monsters/items |
| `Q` | Quit the game |

---

## 🪄 Interface Features

### Ncurses-Based UI
- Renders the world in real time.  
- Handles unbuffered keyboard input.  
- Automatically redraws and refreshes the terminal view.  

### Fog of War (`f`)
- Only tiles within the PC’s light radius are visible.  
- Previously seen areas are remembered.  

### Teleportation (`g`)
- Move the cursor to a target location and press `g` again to teleport.  
- Press `r` for random teleportation.  
- Press `ESC` to cancel teleport mode.

---

## 🧱 Objects and Inventory System

### Object Generation
- Parses object templates from `object_desc.txt`.  
- Supports attributes: `NAME`, `DESC`, `COLOR`, `TYPE`, `SYMB`, and multiple dice fields.  
- Uses an `ObjectDescription` factory class to instantiate items.  
- Ensures artifacts are generated only once per session.  
- Renders objects with correct colors and symbols using ncurses.

### Inventory & Equipment
- **Inventory:** 10 slots (0–9)  
- **Equipment:** 12 slots (a–l)
  - WEAPON, OFFHAND, RANGED, ARMOR, HELMET, CLOAK, GLOVES, BOOTS, AMULET, LIGHT, RING 1, RING 2

---

## ⚔️ Combat System
- Turn-based combat using hitpoints and damage dice.  
- **Bare-handed damage:** 0 + 1d4  
- **Equipped damage:** Sum of rolled equipment damage dice.  
- **Speed bonuses:** Added to PC’s base speed (10).  
- **Monster/PC death:** Entity is removed when HP ≤ 0.  

---

## 🔍 Look Mode (`L`)
- Enter look mode and move the cursor to inspect targets.  
- Displays monster stats (symbol, HP, speed, color, abilities) or item details (name, color, description).

---

## 🛠️ Build and Run Instructions

### Requirements
- **gcc** compiler for compiling the C source code.  
- **ncurses** library for rendering the game interface in the terminal.

---

### Build Instructions

#### Linux/macOS
1. **Install ncurses** (if not installed):  
   - **Ubuntu/Debian:**
     ```bash
     sudo apt-get install libncurses5-dev libncursesw5-dev
     ```
   - **macOS:**
     ```bash
     brew install ncurses
     ```

2. **Clone the repository**:
   ```bash
   git clone <repository-url>
   cd <repository-folder>
3. **Compile the game:
     ```bash
     make
     ```
4. **Run the game:
     ```bash
     make run
     ```


